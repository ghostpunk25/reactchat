{"version":3,"file":"static/js/190.3ca4e883.chunk.js","mappings":"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","sources":["components/PinkBtn/PinkBtn.style.jsx","components/PinkBtn/PinkBtn.jsx","pages/Main/Main.jsx","../node_modules/@mui/material/Typography/typographyClasses.js","../node_modules/@mui/material/Typography/Typography.js"],"sourcesContent":["import { styled, Button } from '@mui/material';\r\n\r\nexport const ColorButton = styled(Button)`\r\nbackground-color:  ${p => p.theme.palette.colors.button};\r\npadding: 14px 39px;\r\nfont-weight: ${p => p.theme.typography.fontWeights.extraBold};\r\nfont-size: 18px;\r\nline-height: 24px;\r\nborder-radius: 100px;\r\ntext-transform: none;\r\n&:hover{\r\n   background-color: #892a5f !important;\r\n}\r\n`","import { ColorButton } from \"./PinkBtn.style\";\r\n\r\nexport const PinkBtn = ({ width, type = 'button', text }) => {\r\n   return (\r\n      <>\r\n         <ColorButton variant=\"contained\" type={type}\r\n            sx={{\r\n               width: width\r\n            }}>\r\n            {text}\r\n         </ColorButton>\r\n      </>\r\n   );\r\n};","import { Box, Container, Typography, useTheme } from '@mui/material';\r\nimport { PinkBtn } from 'components/PinkBtn/PinkBtn';\r\nimport { Link } from 'react-router-dom';\r\nimport girls from 'img/Main/girls.png';\r\nimport logo from 'img/common/LOGO.svg';\r\n\r\nexport const Main = ({ user }) => {\r\n   const theme = useTheme();\r\n\r\n   return (\r\n      <Box component='section'\r\n         sx={{\r\n            padding: '75px 0px 55px'\r\n         }}>\r\n         <Container maxWidth=\"lg\"\r\n            sx={{\r\n               px: '18px',\r\n               display: 'flex',\r\n               flexDirection: 'column',\r\n               alignItems: 'center',\r\n            }}>\r\n            <Box sx={{ mb: '75px' }}>\r\n               <Box component='img' src={girls} alt=\"girls\"\r\n                  sx={{\r\n                     maxWidth: '100%'\r\n                  }} />\r\n            </Box>\r\n            <Box component='h1'\r\n               sx={{\r\n                  mb: '51px',\r\n                  mt: '0px'\r\n               }}>\r\n               <Box component='img' src={logo} alt=\"logo\" />\r\n            </Box>\r\n            <Typography\r\n               sx={{\r\n                  mb: '51px',\r\n                  fontWeight: theme.typography.fontWeights.extraBold,\r\n                  fontSize: '18px',\r\n                  lineHeight: '25px',\r\n                  textAlign: 'center'\r\n               }}>\r\n               Find a suitable person for chatting,  real meetups and relationship\r\n            </Typography>\r\n            <Link to={user ? '/catalog' : '/create'}>\r\n               <PinkBtn width={'304px'} text={'Get Started'} />\r\n            </Link>\r\n         </Container>\r\n      </Box >\r\n   );\r\n};","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getTypographyUtilityClass(slot) {\n  return generateUtilityClass('MuiTypography', slot);\n}\nconst typographyClasses = generateUtilityClasses('MuiTypography', ['root', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'inherit', 'button', 'caption', 'overline', 'alignLeft', 'alignRight', 'alignCenter', 'alignJustify', 'noWrap', 'gutterBottom', 'paragraph']);\nexport default typographyClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getTypographyUtilityClass } from './typographyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\nexport const TypographyRoot = styled('span', {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0\n}, ownerState.variant && theme.typography[ownerState.variant], ownerState.align !== 'inherit' && {\n  textAlign: ownerState.align\n}, ownerState.noWrap && {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n}, ownerState.gutterBottom && {\n  marginBottom: '0.35em'\n}, ownerState.paragraph && {\n  marginBottom: 16\n}));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n};\n\n// TODO v6: deprecate these color values in v5.x and remove the transformation in v6\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  const color = transformDeprecatedColors(themeProps.color);\n  const props = extendSxProp(_extends({}, themeProps, {\n    color\n  }));\n  const {\n      align = 'inherit',\n      className,\n      component,\n      gutterBottom = false,\n      noWrap = false,\n      paragraph = false,\n      variant = 'body1',\n      variantMapping = defaultVariantMapping\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  });\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TypographyRoot, _extends({\n    as: Component,\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n  /**\n   * If `true`, the element will be a paragraph element.\n   * @default false\n   */\n  paragraph: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes /* @typescript-to-proptypes-ignore */.object\n} : void 0;\nexport default Typography;"],"names":["ColorButton","styled","Button","_templateObject","_taggedTemplateLiteral","p","theme","palette","colors","button","typography","fontWeights","extraBold","PinkBtn","_ref","width","_ref$type","type","text","_jsx","_Fragment","children","variant","sx","Main","user","useTheme","Box","component","padding","_jsxs","Container","maxWidth","px","display","flexDirection","alignItems","mb","src","girls","alt","mt","logo","Typography","fontWeight","fontSize","lineHeight","textAlign","Link","to","getTypographyUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TypographyRoot","name","overridesResolver","props","styles","ownerState","root","align","concat","capitalize","noWrap","gutterBottom","paragraph","_extends","margin","overflow","textOverflow","whiteSpace","marginBottom","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","colorTransformations","primary","textPrimary","secondary","textSecondary","error","React","inProps","ref","themeProps","useThemeProps","color","transformDeprecatedColors","extendSxProp","_props$align","className","_props$gutterBottom","_props$noWrap","_props$paragraph","_props$variant","_props$variantMapping","variantMapping","other","_objectWithoutPropertiesLoose","Component","classes","slots","composeClasses","useUtilityClasses","as","clsx"],"sourceRoot":""}