{"version":3,"file":"static/js/339.ae02abd4.chunk.js","mappings":"mQAEaA,GAAgBC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAc,iBAAO,CAC/C,oBAAqB,CAClBE,gBAAiB,WAEtB,IAEYC,GAAiBH,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAc,iBAAO,CAChD,oBAAqB,CAClBE,gBAAiB,OAEtB,I,SCNYE,EAAe,WACzB,IAAMC,GAAMC,EAAAA,EAAAA,YAAWC,EAAAA,GACjBC,GAAWC,EAAAA,EAAAA,MAYjB,OAJAC,EAAAA,EAAAA,YAAU,WACPL,EAAIM,YAAY,WACnB,GAAG,KAGAC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SAC4B,IAAxBT,EAAIU,SAASC,QACTJ,EAAAA,EAAAA,KAACK,EAAAA,EAAG,CAAAH,SACFT,EAAIU,SAASG,KAAI,SAAAC,GAAA,IAAGC,EAAGD,EAAHC,IAAKC,EAAIF,EAAJE,KAAMC,EAAEH,EAAFG,GAAIC,EAAMJ,EAANI,OAAQC,EAAIL,EAAJK,KAAI,OAC7CZ,EAAAA,EAAAA,KAACa,EAAAA,EAAM,CAAUC,QAAS,kBAfjBC,EAesC,CAAEP,IAAAA,EAAKE,GAAAA,EAAIC,OAAAA,EAAQC,KAAAA,GAd9EnB,EAAIuB,eAAeD,GACnBtB,EAAIM,YAAY,mBAChBH,EAAS,SAHW,IAACmB,CAegE,EACtEE,GAAI,CACDC,cAAe,OACfC,MAAO,OACPC,UAAW,OACXC,GAAI,MACJC,aAAc,oBACdC,MAAO,QACRrB,UACFF,EAAAA,EAAAA,KAACwB,EAAAA,EAAS,CAAAtB,UACPuB,EAAAA,EAAAA,MAACpB,EAAAA,EAAG,CACDY,GAAI,CACDS,QAAS,OACTC,WAAY,SACZC,IAAK,QACN1B,SAAA,CACDS,GACIX,EAAAA,EAAAA,KAACb,EAAa,CACb0C,QAAQ,WACRC,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7CC,QAAQ,MAAK/B,UAEbF,EAAAA,EAAAA,KAACkC,EAAAA,EAAM,CAACC,IAAI,aAAaC,IAAK5B,EAC3BS,GAAI,CACDE,MAAO,OACPkB,OAAQ,aAGfrC,EAAAA,EAAAA,KAACT,EAAc,CACdsC,QAAQ,WACRC,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7CC,QAAQ,MAAK/B,UAEbF,EAAAA,EAAAA,KAACkC,EAAAA,EAAM,CAACC,IAAI,aAAaC,IAAK5B,EAC3BS,GAAI,CACDE,MAAO,OACPkB,OAAQ,aAGpBZ,EAAAA,EAAAA,MAACpB,EAAAA,EAAG,CAACY,GAAI,CAAES,QAAS,OAAQY,cAAe,SAAUV,IAAK,OAAQ1B,SAAA,EAC/DF,EAAAA,EAAAA,KAACK,EAAAA,EAAG,CAACY,GAAI,CAAEsB,EAAG,MAAOC,WAAY,OAAUC,UAAU,IAAGvC,SAAEU,KAC1DZ,EAAAA,EAAAA,KAACK,EAAAA,EAAG,CAACY,GAAI,CAAEsB,EAAG,OAAUE,UAAU,IAAGvC,SAAEwC,OAAOC,OAAOlC,EAAK,eAzCzDC,EA6CJ,OAIbV,EAAAA,EAAAA,KAAC4C,EAAAA,EAAU,CAACX,QAAQ,KACnBhB,GAAI,CACDG,UAAW,SACXyB,GAAI,OACJC,QAAS,OACV5C,SAAC,wBAMlB,C","sources":["pages/AllChatsList/AllChatsList.style.jsx","pages/AllChatsList/AllChatsList.jsx"],"sourcesContent":["import { styled, Badge } from '@mui/material';\r\n\r\nexport const StyledBadgeOn = styled(Badge)(() => ({\r\n   '& .MuiBadge-badge': {\r\n      backgroundColor: '#44b700',\r\n   },\r\n}));\r\n\r\nexport const StyledBadgeOff = styled(Badge)(() => ({\r\n   '& .MuiBadge-badge': {\r\n      backgroundColor: 'red',\r\n   },\r\n}));","import { Box, Container, Avatar, Button, Typography } from '@mui/material';\r\nimport { useContext, useEffect } from 'react';\r\nimport { context } from 'context/context';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { StyledBadgeOn, StyledBadgeOff } from './AllChatsList.style';\r\n\r\nexport const AllChatsList = () => {\r\n   const ctx = useContext(context);\r\n   const navigate = useNavigate();\r\n\r\n   const handleChatOpen = (profile) => {\r\n      ctx.getProfileChat(profile);\r\n      ctx.getBackLink('/chatslist');\r\n      navigate('/chat');\r\n   }\r\n\r\n   useEffect(() => {\r\n      ctx.getBackLink('/catalog');\r\n   }, []);\r\n\r\n   return (\r\n      <>\r\n         {ctx.allChats.length !== 0\r\n            ? <Box>\r\n               {ctx.allChats.map(({ img, chat, id, online, name }) => (\r\n                  <Button key={id} onClick={() => handleChatOpen({ img, id, online, name })}\r\n                     sx={{\r\n                        textTransform: 'none',\r\n                        width: '100%',\r\n                        textAlign: 'left',\r\n                        py: '9px',\r\n                        borderBottom: '1px solid #BEC7AF',\r\n                        color: '#000'\r\n                     }}>\r\n                     <Container  >\r\n                        <Box\r\n                           sx={{\r\n                              display: 'flex',\r\n                              alignItems: 'center',\r\n                              gap: '12px'\r\n                           }}>\r\n                           {online\r\n                              ? <StyledBadgeOn\r\n                                 overlap=\"circular\"\r\n                                 anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                                 variant=\"dot\"\r\n                              >\r\n                                 <Avatar alt=\"Remy Sharp\" src={img}\r\n                                    sx={{\r\n                                       width: '60px',\r\n                                       height: '60px'\r\n                                    }} />\r\n                              </StyledBadgeOn>\r\n                              : <StyledBadgeOff\r\n                                 overlap=\"circular\"\r\n                                 anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                                 variant=\"dot\"\r\n                              >\r\n                                 <Avatar alt=\"Remy Sharp\" src={img}\r\n                                    sx={{\r\n                                       width: '60px',\r\n                                       height: '60px'\r\n                                    }} />\r\n                              </StyledBadgeOff>}\r\n                           <Box sx={{ display: 'flex', flexDirection: 'column', gap: '2px' }}>\r\n                              <Box sx={{ m: '0px', fontWeight: '800', }} component='p'>{name}</Box>\r\n                              <Box sx={{ m: '0px', }} component='p'>{Object.values(chat[0])}</Box>\r\n                           </Box>\r\n                        </Box>\r\n                     </Container>\r\n                  </Button>\r\n               ))\r\n               }\r\n            </Box >\r\n            : <Typography variant='h4'\r\n               sx={{\r\n                  textAlign: 'center',\r\n                  pt: '50px',\r\n                  opacity: '0.8'\r\n               }}>\r\n               Chat list is empty\r\n            </Typography>\r\n         }\r\n      </>\r\n   );\r\n};"],"names":["StyledBadgeOn","styled","Badge","backgroundColor","StyledBadgeOff","AllChatsList","ctx","useContext","context","navigate","useNavigate","useEffect","getBackLink","_jsx","_Fragment","children","allChats","length","Box","map","_ref","img","chat","id","online","name","Button","onClick","profile","getProfileChat","sx","textTransform","width","textAlign","py","borderBottom","color","Container","_jsxs","display","alignItems","gap","overlap","anchorOrigin","vertical","horizontal","variant","Avatar","alt","src","height","flexDirection","m","fontWeight","component","Object","values","Typography","pt","opacity"],"sourceRoot":""}