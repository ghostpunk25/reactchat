{"version":3,"file":"static/js/339.1ad69152.chunk.js","mappings":"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","sources":["pages/AllChatsList/AllChatsList.style.jsx","pages/AllChatsList/AllChatsList.jsx","../node_modules/@mui/material/Typography/typographyClasses.js","../node_modules/@mui/material/Typography/Typography.js"],"sourcesContent":["import { styled, Badge } from '@mui/material';\r\n\r\nexport const StyledBadgeOn = styled(Badge)(() => ({\r\n   '& .MuiBadge-badge': {\r\n      backgroundColor: '#44b700',\r\n   },\r\n}));\r\n\r\nexport const StyledBadgeOff = styled(Badge)(() => ({\r\n   '& .MuiBadge-badge': {\r\n      backgroundColor: 'red',\r\n   },\r\n}));","import { Box, Container, Avatar, Button, Typography } from '@mui/material';\r\nimport { useContext, useEffect } from 'react';\r\nimport { context } from 'context/context';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { StyledBadgeOn, StyledBadgeOff } from './AllChatsList.style';\r\n\r\nexport const AllChatsList = () => {\r\n   const ctx = useContext(context);\r\n   const navigate = useNavigate();\r\n\r\n   const handleChatOpen = (profile) => {\r\n      ctx.getProfileChat(profile);\r\n      ctx.getBackLink('/chatslist');\r\n      navigate('/chat');\r\n   }\r\n\r\n   useEffect(() => {\r\n      ctx.getBackLink('/catalog');\r\n   }, []);\r\n\r\n   return (\r\n      <>\r\n         {ctx.allChats.length !== 0\r\n            ? <Box>\r\n               {ctx.allChats.map(({ img, chat, id, online, name }) => (\r\n                  <Button key={id} onClick={() => handleChatOpen({ img, id, online, name })}\r\n                     sx={{\r\n                        textTransform: 'none',\r\n                        width: '100%',\r\n                        textAlign: 'left',\r\n                        py: '9px',\r\n                        borderBottom: '1px solid #BEC7AF',\r\n                        color: '#000'\r\n                     }}>\r\n                     <Container  >\r\n                        <Box\r\n                           sx={{\r\n                              display: 'flex',\r\n                              alignItems: 'center',\r\n                              gap: '12px'\r\n                           }}>\r\n                           {online\r\n                              ? <StyledBadgeOn\r\n                                 overlap=\"circular\"\r\n                                 anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                                 variant=\"dot\"\r\n                              >\r\n                                 <Avatar alt=\"Remy Sharp\" src={img}\r\n                                    sx={{\r\n                                       width: '60px',\r\n                                       height: '60px'\r\n                                    }} />\r\n                              </StyledBadgeOn>\r\n                              : <StyledBadgeOff\r\n                                 overlap=\"circular\"\r\n                                 anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                                 variant=\"dot\"\r\n                              >\r\n                                 <Avatar alt=\"Remy Sharp\" src={img}\r\n                                    sx={{\r\n                                       width: '60px',\r\n                                       height: '60px'\r\n                                    }} />\r\n                              </StyledBadgeOff>}\r\n                           <Box sx={{ display: 'flex', flexDirection: 'column', gap: '2px' }}>\r\n                              <Box sx={{ m: '0px', fontWeight: '800', }} component='p'>{name}</Box>\r\n                              <Box sx={{ m: '0px', }} component='p'>{Object.values(chat[0])}</Box>\r\n                           </Box>\r\n                        </Box>\r\n                     </Container>\r\n                  </Button>\r\n               ))\r\n               }\r\n            </Box >\r\n            : <Typography variant='h4'\r\n               sx={{\r\n                  textAlign: 'center',\r\n                  pt: '50px',\r\n                  opacity: '0.8'\r\n               }}>\r\n               Chat list is empty\r\n            </Typography>\r\n         }\r\n      </>\r\n   );\r\n};","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getTypographyUtilityClass(slot) {\n  return generateUtilityClass('MuiTypography', slot);\n}\nconst typographyClasses = generateUtilityClasses('MuiTypography', ['root', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'inherit', 'button', 'caption', 'overline', 'alignLeft', 'alignRight', 'alignCenter', 'alignJustify', 'noWrap', 'gutterBottom', 'paragraph']);\nexport default typographyClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getTypographyUtilityClass } from './typographyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\nexport const TypographyRoot = styled('span', {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0\n}, ownerState.variant && theme.typography[ownerState.variant], ownerState.align !== 'inherit' && {\n  textAlign: ownerState.align\n}, ownerState.noWrap && {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n}, ownerState.gutterBottom && {\n  marginBottom: '0.35em'\n}, ownerState.paragraph && {\n  marginBottom: 16\n}));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n};\n\n// TODO v6: deprecate these color values in v5.x and remove the transformation in v6\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  const color = transformDeprecatedColors(themeProps.color);\n  const props = extendSxProp(_extends({}, themeProps, {\n    color\n  }));\n  const {\n      align = 'inherit',\n      className,\n      component,\n      gutterBottom = false,\n      noWrap = false,\n      paragraph = false,\n      variant = 'body1',\n      variantMapping = defaultVariantMapping\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  });\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TypographyRoot, _extends({\n    as: Component,\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n  /**\n   * If `true`, the element will be a paragraph element.\n   * @default false\n   */\n  paragraph: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes /* @typescript-to-proptypes-ignore */.object\n} : void 0;\nexport default Typography;"],"names":["StyledBadgeOn","styled","Badge","backgroundColor","StyledBadgeOff","AllChatsList","ctx","useContext","context","navigate","useNavigate","useEffect","getBackLink","_jsx","_Fragment","children","allChats","length","Box","map","_ref","img","chat","id","online","name","Button","onClick","profile","getProfileChat","sx","textTransform","width","textAlign","py","borderBottom","color","Container","_jsxs","display","alignItems","gap","overlap","anchorOrigin","vertical","horizontal","variant","Avatar","alt","src","height","flexDirection","m","fontWeight","component","Object","values","Typography","pt","opacity","getTypographyUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TypographyRoot","overridesResolver","props","styles","ownerState","root","align","concat","capitalize","noWrap","gutterBottom","paragraph","theme","_extends","margin","typography","overflow","textOverflow","whiteSpace","marginBottom","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","colorTransformations","primary","textPrimary","secondary","textSecondary","error","React","inProps","ref","themeProps","useThemeProps","transformDeprecatedColors","extendSxProp","_props$align","className","_props$gutterBottom","_props$noWrap","_props$paragraph","_props$variant","_props$variantMapping","variantMapping","other","_objectWithoutPropertiesLoose","Component","classes","slots","composeClasses","useUtilityClasses","as","clsx"],"sourceRoot":""}